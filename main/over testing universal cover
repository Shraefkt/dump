import numpy as np
import matplotlib.pyplot as plt
from universal_cover_comparer import universal_cover_finder


def overhead(n_nodes, n_cover):   #n_node -> leaf nodes
    universal_cover = universal_cover_finder(n_nodes, n_cover)
    cover_ranges = [2**i for i in universal_cover]
    overhead_number = sum(cover_ranges) - n_nodes
    overhead_percentage = overhead_number*100/n_nodes
    return overhead_percentage


def plot(n_nodes,n_cover):
    Number_of_nodes_array = []
    Ave_overhead_array = []
    for i in range(2, n_nodes):
        Number_of_nodes_array.append(i)
        Ave_overhead_array.append(overhead(i,n_cover))
    Number_of_nodes_array = np.array(Number_of_nodes_array)
    Ave_overhead_array = np.array(Ave_overhead_array)
    plt.plot(Number_of_nodes_array, Ave_overhead_array, label=f"{int(n_cover)}-cover")




plt.xlabel("Size of range query")
plt.ylabel("Average overhead percentage")
times = 100

plot(times,3)
plot(times,4)
plot(times,5)
plot(times,6)
plot(times,7)
plot(times,8)
leg = plt.legend(loc='upper center')
plt.show()
